#Quasi_tridiagonal system 

from __future__ import division
import numpy as np

kz = 0
ky = 1
kfc = 3.12
kper = ((ky**2 + kz**2)*kfc**2)/4
gamma = np.sqrt(kper)

#coe_00 = [0.500000000000, 0.500000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000, 0.000000000000] 
#coe_01 = [0.343621426724, 0.458415375629, 0.149238003588, 0.040398071627, 0.006998637322, 0.001169610106, 0.000141932365, 0.000016942638] 
#coe_02 = [0.237207284651, 0.389780786071, 0.225469116680, 0.099563375996, 0.034523085938, 0.010072224469, 0.002800512731, 0.000583613464] 
#coe_03 = [0.343621426724, 0.458415375629, 0.149238003588, 0.040398071627, 0.006998637322, 0.001169610106, 0.000141932365, 0.000016942638] 
#coe_10 = [0.343621426724, 0.458415375629, 0.149238003588, 0.040398071627, 0.006998637322, 0.001169610106, 0.000141932365, 0.000016942638] 
#coe_11 = [0.287349780757, 0.429168045951, 0.194951723973, 0.067022455735, 0.017008625422, 0.003702239156, 0.000689869847, 0.000107259157] 
#coe_12 = [0.223047530033, 0.375587047194, 0.231056065771, 0.110087415277, 0.041670968037, 0.013358034195, 0.004225436159, 0.000967503334] 
#coe_13 = [0.287349780757, 0.429168045951, 0.194951723973, 0.067022455735, 0.017008625422, 0.003702239156, 0.000689869847, 0.000107259157] 
#coe_20 = [0.237207284651, 0.389780786071, 0.225469116680, 0.099563375996, 0.034523085938, 0.010072224469, 0.002800512731, 0.000583613464] 
#coe_21 = [0.223047530033, 0.375587047194, 0.231056065771, 0.110087415277, 0.041670968037, 0.013358034195, 0.004225436159, 0.000967503334] 
#coe_22 = [0.196297811298, 0.344610067082, 0.236182387835, 0.130229576246, 0.058094542321, 0.022547431471, 0.009425258546, 0.002612925201] 
#coe_23 = [0.223047530033, 0.375587047194, 0.231056065771, 0.110087415277, 0.041670968037, 0.013358034195, 0.004225436159, 0.000967503334]

#coe_03 = [0.190187379425, 0.336777654832, 0.236158589063, 0.134615655122, 0.062285653952, 0.025307336441, 0.011368377559, 0.003299353605]
#coe_06 = [0.237207284651, 0.389780786071, 0.225469116680, 0.099563375996, 0.034523085938, 0.010072224469, 0.002800512731, 0.000583613464]
#coe_07 = [0.343621426724, 0.458415375629, 0.149238003588, 0.040398071627, 0.006998637322, 0.001169610106, 0.000141932365, 0.000016942638]


coe_01 = [-0.005098767487, -0.005442552725, 0.000024452783, 0.001966230881, 0.001541011815, 0.001375185093, 0.003533302889, 0.002101136751]
for x in np.linspace(-1,1,10):
	print "x = ", x, "T(x) =", np.polynomial.chebyshev.chebval(x,coe_06)



k_t = np.exp(gamma)
c2 = k_t/(1 - k_t**4)
c1 = -c2 * k_t**2
def p(x):
	return c1*np.exp(gamma*x) + c2*np.exp(-gamma*x)

for x in np.linspace(-1,1,10):
	print "x = ", x, "p(x) =", p(x)
